name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        model: [
          { link: 6B, tokens: 6B, dimensions: 50d },
          { link: 6B, tokens: 6B, dimensions: 100d },
          { link: 6B, tokens: 6B, dimensions: 200d },
          { link: 6B, tokens: 6B, dimensions: 300d },
          { link: 42B.300d, tokens: 42B, dimensions: 300d },
          { link: 840B.300d, tokens: 840B, dimensions: 300d },
          { link: twitter.27B, tokens: twitter.27B, dimensions: 25d },
          { link: twitter.27B, tokens: twitter.27B, dimensions: 50d },
          { link: twitter.27B, tokens: twitter.27B, dimensions: 100d },
          { link: twitter.27B, tokens: twitter.27B, dimensions: 200d },
        ]

    steps:
      - name: Check Out Repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and Push ${{ matrix.model }} Model
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          build-args: |
            LINK=${{ matrix.model.link }}
            TOKENS=${{ matrix.model.tokens }}
            DIMENSIONS=${{ matrix.model.dimensions }}
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags:  ${{ secrets.DOCKER_HUB_USERNAME }}/gloves:${{ matrix.model.tokens }}.${{ matrix.model.dimensions }}.latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image Digest
        run: echo ${{ steps.docker_build.outputs.digest }}